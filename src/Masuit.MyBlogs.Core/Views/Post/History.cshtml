@using Masuit.MyBlogs.Core.Models
@using Masuit.MyBlogs.Core.Models.DTO
@using Masuit.MyBlogs.Core.Models.Entity
@model Masuit.Tools.Models.PagedList<Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion>
@{
  var post = (Post) ViewBag.Primary;
  ViewBag.Title = post.Title + "的历史版本";
  Layout = "~/Views/Shared/_Layout.cshtml";
  AdvertisementDto ad = ViewBag.Ads;
}
<div class="main-container" id="historyApp" style="min-height: 70vh">
  <ol class="breadcrumb">
    <li>
      <a asp-action="Index" asp-controller="Home">首页</a>
    </li>
    <li>
      <a asp-action="Post" asp-controller="Home">文章列表</a>
    </li>
    @if (post.Category.ParentId > 0) {
      if (post.Category.Parent.ParentId > 0) {
        <li>
          <a asp-action="Category" asp-controller="Home" asp-route-id="@post.Category.Parent.ParentId">@post.Category.Parent.Parent.Name</a>
        </li>
      }

      <li>
        <a asp-action="Category" asp-controller="Home" asp-route-id="@post.Category.ParentId">@post.Category.Parent.Name</a>
      </li>
    }
    <li>
      <a asp-action="Category" asp-controller="Home" asp-route-id="@post.CategoryId">@post.Category.Name</a>
    </li>
    <li>
      @Html.ActionLink(post.Title.Length > 40 ? post.Title.Substring(0, 40) + "..." : post.Title, "Details", "Post", new {
        id = post.Id
      }, null)
    </li>
    <li class="current">
      <em>历史版本</em>
    </li>
  </ol>
  <div class="history-table-card">
    <div class="history-title">历史版本列表</div>
    <div id="version-compare-form">
      <table class="history-table">
        <thead>
        <tr>
          <th style="width:140px;">
            <button :disabled="vers.length!=2" @@click="compare" class="compare-btn">版本对比</button>
          </th>
          <th>标题</th>
          <th style="width:140px;">原分类</th>
          <th style="width:140px;">修改时间</th>
          <th style="width:140px;">修改人</th>
        </tr>
        </thead>
        <tbody>
        <tr>
          <td style="text-align: center">
            <input class="version-checkbox" type="checkbox" v-model="vers" value="0"/>
          </td>
          <td>
            <a asp-action="Details" asp-controller="Post" asp-route-id="@post.Id" class="history-link">@post.Title</a>
            <span class="text-red">(最新版本)</span>
          </td>
          <td>
            <a asp-action="Category" asp-controller="Home" asp-route-id="@post.CategoryId" class="category-link">@post.Category.Name</a>
          </td>
          <td>
            <a asp-action="Archieve" asp-controller="Home" asp-route-dd="@post.ModifyDate.Day" asp-route-mm="@post.ModifyDate.Month" asp-route-mode="@nameof(post.ModifyDate)" asp-route-yyyy="@post.ModifyDate.Year" class="history-link">
              <time>@post.ModifyDate.ToString("yyyy-MM-dd")</time>
            </a>
          </td>
          <td>@post.Modifier</td>
        </tr>
        @foreach (var p in Model.Data) {
          <tr>
            <td style="text-align: center">
              <input class="version-checkbox" type="checkbox" v-model="vers" value="@p.Id"/>
            </td>
            <td>
              <a asp-action="HistoryVersion" asp-controller="Post" asp-route-hid="@p.Id" asp-route-id="@p.PostId" class="history-link">@p.Title</a>
            </td>
            <td>
              <a asp-action="Category" asp-controller="Home" asp-route-id="@p.CategoryId" class="category-link">@p.Category.Name</a>
            </td>
            <td>
              <a asp-action="Archieve" asp-controller="Home" asp-route-dd="@p.ModifyDate.Day" asp-route-mm="@p.ModifyDate.Month" asp-route-mode="@nameof(p.ModifyDate)" asp-route-yyyy="@p.ModifyDate.Year" class="history-link">
                <time>@p.ModifyDate.ToString("yyyy-MM-dd")</time>
              </a>
            </td>
            <td>@p.Modifier</td>
          </tr>
        }
        </tbody>
      </table>
    </div>
  </div>
  @{
    await Html.RenderPartialAsync("_Pagination", new Pagination(Model.CurrentPage, Model.PageSize, Model.TotalCount) {
      ShowOrder = false
    });
  }
  @if (ad != null) {
    await Html.RenderPartialAsync("_ArticleListAdvertisement", ad);
  }
</div>
<script>
const { createApp, ref, onMounted, watch, computed } = Vue;
createApp({
  setup() {
    const vers = ref([]);
    return {
      vers
    };
  },
  watch: {
    vers(newVal) {
      if (newVal.length > 2) {
        newVal.shift();
      }
    }
  },
  methods: {
    compare() {
      location.href="/@post.Id/history/"+this.vers[0]+"-"+this.vers[1];
    }
  }
}).use(naive).mount('#historyApp');
</script>