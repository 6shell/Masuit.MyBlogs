@model Masuit.MyBlogs.Core.Models.Entity.Post

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>文章《@Model.Title》洞察分析</title>
    <meta content="webkit" name="renderer">
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta content="width=device-width, initial-scale=1, maximum-scale=1" name="viewport">
    <link href="/Assets/layui/css/layui.min.css" media="all" rel="stylesheet">
    <style>
        .mp-results.mp-bottomleft {
            top: unset !important;
            bottom: 0;
        }
    </style>
</head>
<body style="overflow-x: hidden">
    <h3 align="center">文章《@Model.Title》洞察分析</h3>
    <div class="searchTable">
        <div class="layui-inline">
            <input class="layui-input" name="kw" id="kw">
        </div>
        <button class="layui-btn" data-type="reload">搜索</button>
        <a class="layui-btn" asp-controller="Post" asp-action="ExportPostVisitRecords" asp-route-id="@Model.Id">导出</a>
    </div>
    <table class="layui-hide" id="table" lay-filter="tableEvent"></table>
    <form class="layui-form">
        <label class="layui-form-label">对比最近</label>
        <div class="layui-input-inline">
            <select id="period" name="period" lay-filter="period">
                <option value="0">不对比</option>
                <option value="7">一周</option>
                <option value="15">15天</option>
                <option value="30" selected="selected">一个月</option>
                <option value="60">两个月</option>
                <option value="90">三个月</option>
                <option value="180">半年</option>
            </select>
        </div>
    </form>
    <div id="chart" style="height: 500px"></div>
    <mini-profiler max-traces="5" />
</body>
</html>
<script src="/Assets/layui/layui.js"></script>
<script src="https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-y/echarts/5.5.0/echarts.min.js" type="text/javascript"></script>
<script>
    layui.use('table', function() {
        var table = layui.table;
        table.render({
            elem: '#table',
            url: '/@Model.Id/records',
            cellMinWidth: 80, //全局定义常规单元格的最小宽度，layui 2.2.1 新增
            cols: [
                [
                    { field: 'IP', title: 'IP', align: 'center', event: 'tool-ip', width:320 },
                    { field: 'Location', title: '位置和网络', align: 'center'},
                    { field: 'RequestUrl', title: '请求URL', align: 'center' },
                    { field: 'Referer', title: '页面来源', align: 'center', event: 'visit' },
                    { field: 'Time', title: '访问时间', align: 'center',width:180 }
                ]
            ],
            page: true,
            limit:20,
            request: {
                limitName: 'size' //每页数据量的参数名，默认：limit
            },
            parseData: function(res) { //res 即为原始返回的数据
                return {
                    "code": res.TotalCount > 0 ? 0 : 1, //解析接口状态
                    "msg": "暂无数据", //解析提示文本
                    "count": res.TotalCount, //解析数据长度
                    "data": res.Data //解析数据列表
                };
            }
        });
        table.on('tool(tableEvent)', function(obj){
            var data = obj.data;
            if(obj.event === 'tool-ip'){
                window.open("/tools/ip/"+data.IP);
            }

            if(obj.event === 'visit'){
                window.open(data.Referer);
            }
        });

        var $ = layui.$;
        $('.searchTable .layui-btn').on('click', function () {
            table.reload('table', {
                page: {
                    curr: 1
                },
                where: {
                    kw: $('#kw').val()
                }
            });
        });
    });
    layui.use("form", function() {
        var form = layui.form;
        form.on("select(period)", function (data) {
            var chartDom = document.getElementById('chart');
            echarts.init(chartDom).dispose();
            showCharts();
        });
    });
    showCharts();
    function showCharts() {
        var period = document.getElementById("period").value;
        window.fetch(`/@Model.Id/records-chart?compare=${period > 0}&period=${period}`, {
            credentials: 'include',
            method: 'GET',
            mode: 'cors'
        }).then(function (response) {
            return response.json();
        }).then(function (res) {
            var xSeries = [];
            var yCountSeries = [];
            var yUvSeries = [];
            for (let series of res) {
                var x = [];
                var yCount = [];
                var yUV = [];
                for (let item of series) {
                    x.push(new Date(Date.parse(item.Date)).toLocaleDateString());
                    yCount.push(item.Count);
                    yUV.push(item.UV);
                }
                xSeries.push(x);
                yCountSeries.push(yCount);
                yUvSeries.push(yUV);
            }
            var chartDom = document.getElementById('chart');
            var myChart = echarts.init(chartDom);
            const colors = ['#009688', '#ccc'];
            var option = {
                color: colors,
                tooltip: {
                    trigger: 'none',
                    axisPointer: {
                        type: 'cross'
                    }
                },
                legend: {},
                grid: {
                    top: 70,
                    bottom: 50
                },
                title: {
                    left: 'center',
                    text: '文章《@Model.Title》最近访问趋势'
                },
                xAxis: xSeries.map(function (item, index) {
                    return {
                        type: 'category',
                        axisTick: {
                            alignWithLabel: true
                        },
                        axisLine: {
                            onZero: false,
                            lineStyle: {
                                color: colors[index]
                            }
                        },
                        axisPointer: {
                            label: {
                                formatter: function (params) {
                                    return params.value + (params.seriesData.length ? ' 访问量：' + params.seriesData[0].data + "，UV：" + params.seriesData[1].data : '');
                                }
                            }
                        },
                        data: item
                    }
                }),
                yAxis: [
                    {
                        type: 'value'
                    }
                ],
                series: yCountSeries.map(function (item, index) {
                    return {
                        type: 'line',
                        symbol: 'none',
                        xAxisIndex: index,
                        data: item,
                        lineStyle: {
                            type: index === 1 ? 'dashed' : ""
                        },
                        markPoint: {
                            data: [
                                { type: 'max', name: '最大值' },
                                { type: 'min', name: '最小值' }
                            ]
                        },
                        markLine: {
                            data: [
                                { type: 'average', name: '平均值' }
                            ]
                        }
                    }
                }).concat(yUvSeries.map(function (item, index) {
                    return {
                        type: 'line',
                        symbol: 'none',
                        xAxisIndex: index,
                        areaStyle: {},
                        data: item,
                        lineStyle: {
                            type: index === 1 ? 'dashed' : ""
                        }
                    }
                }))
            };
            myChart.setOption(option);
        });
    }
</script>
