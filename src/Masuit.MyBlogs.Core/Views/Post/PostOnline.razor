@using System.Threading
@using FreeRedis
@using Masuit.MyBlogs.Core.Common

@implements IAsyncDisposable
@inject IRedisClient CacheManager
@inject IJSRuntime _js;

<span class="text-red online" @onclick="ShowViewer">@online</span>人正在浏览本文

@code {
    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public string IP { get; set; }

    [Parameter]
    public bool IsAdmin { get; set; }

    long online;
    Timer _timer;

    protected override void OnInitialized()
    {
        try {
            var key = nameof(PostOnline) + ":" + Id;
            online = CacheManager.SAdd(key, IP);
            CacheManager.Expire(key, TimeSpan.FromMinutes(5));
            _timer = new Timer(_ =>
            {
                try {
                    online = CacheManager.SCard(key);
                    InvokeAsync(StateHasChanged);
                }
                catch{
                    // ignored
                }
            }, null, 0, 1000);
        }
        catch {
            // ignored
        }
    }

    public void ShowViewer()
    {
        if (online > 0 && IsAdmin)
        {
            try {
                _js.InvokeVoidAsync("showViewer", CacheManager.SMembers(nameof(PostOnline) + ":" + Id).Select(s => KeyValuePair.Create(s, s.GetIPLocation().ToString())));
            }
            catch {
                // ignored
            }
        }
    }

    public ValueTask DisposeAsync()
    {
        try {
            online = CacheManager.SRem(nameof(PostOnline) + ":" + Id, IP);
        }
        catch {
            // ignored
        }
        return _timer?.DisposeAsync() ?? ValueTask.CompletedTask;
    }
}
