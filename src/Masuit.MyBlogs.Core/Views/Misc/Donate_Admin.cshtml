@model string
@using Masuit.MyBlogs.Core.Models.DTO
@{
  ViewBag.Title = "网站打赏";
  Layout = "~/Views/Shared/_Layout.cshtml";
  Random r = new Random();
  List<AdvertisementDto> ads = ViewBag.Ads;
}
<style>
    .bg-title {
        height: 50vh;
        max-height: 400px;
        position: relative;
        background: url(/Content/images/@(r.Next(1, 9)).jpg) no-repeat center;
        background-size: cover;
        background-attachment: fixed;
    }
    .flex-box {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        width: 100%;
        height: 100%;
    }
    .flex-box>div{
        margin: 0 15px;
        width: 18%;
    }
    @@media only screen and (max-width: 1080px) {
        .flex-box>div{
            width: 29.8%;
        }
    }
</style>
<ol class="breadcrumb">
  <li>
    <a asp-action="Index" asp-controller="Home">首页</a>
  </li>
  <li class="current">
    <em>@ViewBag.Title</em>
  </li>
</ol>
<div class="bg-title">
  <div class="header-content text-center">
    <h2 class="size48">
      喜欢我的作品和文章？
    </h2>
    <div class="divider"></div>
    <p class="size24">
      您的捐助就是给我最大的鼓励
    </p>
  </div>
</div>
@Html.Raw(Model)
<div class="container-fluid" id="donateApp" ng-controller="home as list">
  <div class="margin-clear page-header">
    <h2 class="size24" style="display: inline">
      打赏名单(排名不分先后)：
    </h2>
  </div>
  <vxe-toolbar>
    <template #tools>
      <vxe-button @@click="add">添加打赏</vxe-button>
    </template>
  </vxe-toolbar>
  <vxe-table :data="tableData" :edit-config="{ trigger: 'manual', mode: 'row' }" :loading="loading" border ref="tableRef" show-header-overflow show-overflow stripe>
    <!-- 打赏时间列 -->
    <vxe-column :edit-render="{ name: 'VxeInput', props: { type: 'date' } }" field="DonateTime" fixed="left" formatter="formatDate" title="打赏时间" width="160"></vxe-column>
    <!-- 昵称列 -->
    <vxe-column :edit-render="{ name: 'VxeInput' }" field="NickName" min-width="140" title="昵称"></vxe-column>
    <!-- 金额列 -->
    <vxe-column :edit-render="{ name: 'VxeInput' }" field="Amount" title="金额" width="110"></vxe-column>
    <!-- 打赏方式列 -->
    <vxe-column :edit-render="{ name: 'VxeInput' }" field="Via" title="打赏方式" width="140"></vxe-column>
    <!-- Email列 -->
    <vxe-column :edit-render="{ name: 'VxeInput', props: { type: 'email' } }" field="Email" min-width="200" title="Email"></vxe-column>
    <!-- QQ或微信列 -->
    <vxe-column :edit-render="{ name: 'VxeInput' }" field="QQorWechat" title="QQ或微信" width="160"></vxe-column>
    <!-- 操作列 -->
    <vxe-column align="center" fixed="right" title="操作" width="130">
      <template #default="{ row, $table }">
        <div class="q-gutter-xs">
          <template v-if="$table.isEditByRow(row)">
            <vxe-button @@click="saveRow(row, $table)" icon="vxe-icon-check"></vxe-button>
            <vxe-button @@click="cancelEdit(row, $table)" icon="vxe-icon-close"> </vxe-button>
          </template>
          <template v-else>
            <vxe-button @@click="$table.setEditRow(row)" color="info" icon="vxe-icon-edit"></vxe-button>
            <vxe-button :disable="row.Id === 0 || row.Id == null" @@click="deleteRecord(row.Id)" icon="vxe-icon-delete"></vxe-button>
          </template>
        </div>
      </template>
    </vxe-column>
  </vxe-table>
  <!-- 分页组件 -->
  <vxe-pager :current-page="pageConfig.page" :page-size="pageConfig.size" :total="pageConfig.total" @@page-change="pageChange"/>
</div>
@if (ads.Count == 2) {
  <div class="container-fluid">
    <div class="margin-clear page-header">
      <h2 class="size24" style="display: inline">
        推广支持：
      </h2>
    </div>
    <div class="row">
      <div class="col-md-6">
        @{
          await Html.RenderPartialAsync("_ArticleListAdvertisement", ads[0]);
        }
      </div>
      <div class="col-md-6">
        @{
          await Html.RenderPartialAsync("_ArticleListAdvertisement", ads[1]);
        }
      </div>
    </div>
  </div>
}
<link href="https://cdn.jsdelivr.net/npm/vxe-pc-ui@4.9.25/lib/style.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/vxe-table@4.16.11/lib/style.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/xe-utils/dist/xe-utils.umd.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vxe-pc-ui@4.9.25/lib/index.umd.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vxe-table@4.16.11/lib/index.umd.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/echarts@6/dist/echarts.min.js" type="text/javascript"></script>
<script src="https://cdn.jsdelivr.net/npm/dayjs/dayjs.min.js"></script>
<script>
    VxeUI.formats.add('formatDate', {
      cellFormatMethod:function (data, format) {
        return dayjs(data.cellValue).format(format || 'YYYY-MM-DD')
      }
    })
    const { createApp, ref, onMounted, watch, computed } = Vue;
    createApp({
        setup() {
            // 表格数据
            const tableData = ref([]);
            const tableRef = ref(null)
            const originalMap = ref(new Map())

            // 分页配置
            const pageConfig = ref({
                page: 1,
                size: 10,
                total: 0
            });

            // 加载状态
            const loading = ref(false);
            return {
                tableData,
                pageConfig,
                loading,
                originalMap,
                tableRef
            };
        },
        methods: {
          pageChange({ pageSize, currentPage }) {
              this.pageConfig.page = currentPage;
              this.pageConfig.size = pageSize;
              this.loadData();
          },
          async loadData(){
            this.loading = true;
            const data = await axios.post("/donate/getpagedata", {
                page: this.pageConfig.page,
                size: this.pageConfig.size
            }).then(res=>res.data);
            this.tableData = data.Data;
            this.pageConfig.total = data.TotalCount;
            this.loading = false;
          },

          async add(){
              const $table = this.tableRef
              if (!$table) return
              // 防止已有编辑行
              if ($table.getEditRecords && $table.getEditRecords().length > 0) {
                  VxeUI.modal.notification({
                      content: '请先保存或取消当前编辑行',
                      status: 'error'
                  });
                  return
              }
              // 在首行插入
              const record = {
                  Id: 0,
                  NickName: '',
                  DonateTime: dayjs().format('YYYY-MM-DD HH:mm:ss'),
                  Amount: '',
                  Via: '',
                  Email: '',
                  QQorWechat: ''
              }
              const { row } = await $table.insertAt(record, 0)
              $table.setEditRow(row)
              this.originalMap.set(0, { ...record, Id: 0 })
          },
          
          async saveRow(row, table){
            if (!row.NickName || !row.Amount || !row.Via) {
              VxeUI.modal.notification({
                  content: '请填写必填字段：昵称/金额/打赏方式',
                  status: 'warning'
              });
              return
            }
            const resp = await axios.post('/donate/save', row).then(res=>res.data)
            if (resp?.Success) {
              VxeUI.modal.notification({
                  content: resp.Message || '保存成功',
                  status: 'success'
              });
              table.clearEdit()
              await this.loadData()
            } else {
              VxeUI.modal.notification({
                  content: resp?.Message || '保存失败',
                  status: 'error'
              });
            }
          },
          cancelEdit(row, table){
            if (row.Id == null) {
              // 新增未保存直接移除
              const idx = this.tableData.indexOf(row)
              if (idx > -1) this.tableData.splice(idx, 1)
            } else {
              const origin = this.originalMap.get(row.Id)
              if (origin) Object.assign(row, origin)
            }
            table.clearEdit()
          },

          async deleteRecord(id){
            if (!id) return
              const data = await axios.post(`/donate/delete/${id}`).then(res=>res.data)
              if (data?.Success !== false) {
                VxeUI.modal.notification({
                    content: data?.Message || '删除成功',
                    status: 'success'
                });
                await this.loadData()
              } else {
                VxeUI.modal.notification({
                    content: data?.Message || '删除失败',
                    status: 'error'
                });
              }
          }
        },
        created() {
            this.loadData();
        }
    }).use(VxeUI).use(VXETable).mount('#donateApp');

</script>